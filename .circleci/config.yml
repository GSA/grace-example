version: 2
jobs:
  validate:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - run:
          name: Upgrade pip
          command: pip install --upgrade pip
      - run:
          name: Install Terraform
          command: |
            wget https://releases.hashicorp.com/terraform/0.11.7/terraform_0.11.7_linux_amd64.zip
            unzip terraform_0.11.7_linux_amd64.zip
            sudo mv terraform /usr/local/bin/terraform
          working_directory: /tmp
      - run:
          name: Install Packer
          command: |
            wget https://releases.hashicorp.com/packer/1.2.5/packer_1.2.5_linux_amd64.zip
            unzip packer_1.2.5_linux_amd64.zip
            sudo mv packer /usr/local/bin/packer
          working_directory: /tmp
      - run:
          name: Install terrascan
          command: pip install --upgrade --user terrascan
      - run:
          name: OpenSSL version
          command: openssl version
      - run:
          name: Decrypt environment variables
          command: openssl aes-256-cbc -d -in secret-env-cipher -out secret-env-plain -k $KEY
          working_directory: ~/project/terraform/bootstrap
      - run:
          name: Decrypt network tfvars
          command: openssl aes-256-cbc -d -in secret-tfvars-cipher -out terraform.tfvars -k $KEY
          working_directory: ~/project/terraform/networking
      - run:
          name: Validate terraform
          command: |
            source terraform/bootstrap/secret-env-plain
            make validate
      - persist_to_workspace:
          root: .
          paths:
            - ./*

  deploy_example:
    docker:
      - image: 18fgsa/devsecops-builder:alpine
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Upgrade pip
          command: pip install --upgrade pip
      - run:
          name: Install terrascan
          command: pip install --upgrade terrascan
      - run:
          name: Deploy the full example
          command: |
            source terraform/bootstrap/secret-env-plain
            make deploy

workflows:
  version: 2

  validate_and_deploy:
    jobs:
      - validate
      - deploy_example:
          filters:
            branches:
              only: master
          requires:
            - validate
